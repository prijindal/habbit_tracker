on:
  push:
    branches:
      - main

name: Flutter

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      - name: save release key
        env:
          KEY_FILE_BASE64: ${{ secrets.KEY_FILE_BASE64 }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEY_FILE_BASE64" | base64 -d > "$(pwd)/release.keystore"
          echo "storeFile=$(pwd)/release.keystore" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "storePassword=$KEY_PASSWORD" >> android/key.properties
          echo "VERSION_CODE=$GITHUB_RUN_NUMBER" > android/version.properties

      # - run: flutter build apk --release
      - run: flutter build appbundle --release
      - uses: actions/upload-artifact@v3
        with:
          name: android
          path: build/app/outputs
          retention-days: 1
      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.prijindal.habbit_tracker
          track: internal
          status: completed
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          mappingFile: build/app/outputs/mapping/release/mapping.txt

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test --coverage
      - uses: codecov/codecov-action@v3
        with:
          flags: app-flutter
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_HABBIT_TRACKER_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_HABBIT_TRACKER_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_HABBIT_TRACKER_PRIJINDAL}}
      - run: flutterfire configure -y --platforms=web --ios-bundle-id=com.prijindal.habbit-tracker --macos-bundle-id=com.prijindal.habbit-tracker
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build web --release
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_HABBIT_TRACKER_PRIJINDAL }}'
          channelId: live
          projectId: habbit-tracker-prijindal
      - uses: actions/upload-artifact@v3
        with:
          name: web
          path: build/web
          retention-days: 1
      - run: flutter build linux --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: build/linux
          retention-days: 1

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      - run: flutter build macos --release
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: macos
      #     path: build/macos
      - run: flutter build ios --release --no-codesign
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: ios
      #     path: build/ios

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      - run: flutter build windows --release
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: build/windows
          retention-days: 1
